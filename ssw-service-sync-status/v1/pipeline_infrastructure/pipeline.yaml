AWSTemplateFormatVersion: "2010-09-09"
Description: S3 static website
Resources:
  # We need to create a role that will have the permissions to create a pipeline, access S3 buckets, etc ...
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - s3.amazonaws.com
        Version: "2012-10-17"

  # We need to create an artifact bucket to store the output of our build before it gets deployed.
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  # Our pipeline role needs extra permissions which can be added via a custom policy.
  PipelineRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource:
              # Static website bucket
            {% for service_instance in service_instances %}
              - "arn:aws:s3:::{{ service_instance.inputs.bucket_name }}"
              - "arn:aws:s3:::{{ service_instance.inputs.bucket_name }}/*"
            {%- endfor %}
              # Pipeline bucket
              - !Sub "arn:aws:s3:::${PipelineArtifactsBucket}"
              - !Sub "arn:aws:s3:::${PipelineArtifactsBucket}/*"
          - Action:
              - codebuild:*
              - codestar-connections:*
              - logs:*
            Effect: Allow
            Resource: "*"
          - Action: sts:AssumeRole
            Effect: Allow
            Resource: !GetAtt
              - PipelineRole
              - Arn
        Version: "2012-10-17"
      PolicyName: PipelineRoleDefaultPolicy
      Roles:
        - Ref: PipelineRole

  BuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - PipelineRole
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "{{ pipeline.inputs.image }}"
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: service_name
            Type: PLAINTEXT
            Value: "{{service.name}}"
      ServiceRole: !GetAtt
          - PipelineRole
          - Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: "0.2"
          phases:
            install:
              runtime-versions:
                nodejs: 14.x
              commands:
                - "{{ pipeline.inputs.install_command }}"
            pre_build:
              commands:
                - "{{ pipeline.inputs.pre_build_command }}"
            build:
              commands:
                - "echo Build started on `date`"
                - "{{ pipeline.inputs.build_command }}"
                - "echo Build completed on `date`"
          # Include only the files required for your application to run.
          # Do not use recursively include artifacts from node_modules directory as it will include unnecessary packages
          # used only for building and testing.
          # ExpressJS apps will need other artifact directories included (bin/*, public/*, routes/*, views/* etc).
          artifacts:
            base-directory: "{{ pipeline.inputs.output_path }}"
            files:
              - "{{ pipeline.inputs.file_match }}"
          cache:
            paths:
              - "./node_modules/**/*"

  Pipeline:
      Type: AWS::CodePipeline::Pipeline
      DependsOn:
        - PipelineRoleDefaultPolicy
        - PipelineRole
        - PipelineArtifactsBucket
      Properties:
        RoleArn: !GetAtt
          - PipelineRole
          - Arn
        ArtifactStore:
          Location:
            Ref: PipelineArtifactsBucket
          Type: S3
  {% for service_instance in service_instances %}
        Stages:
          - Actions:
              - ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                Configuration:
                  ConnectionArn: "{{ service.repository_connection_arn }}"
                  FullRepositoryId: "{{ service.repository_id }}"
                  BranchName: "{{ service.branch_name }}"
                Name: Checkout
                OutputArtifacts:
                  - Name: SourceArtifact
                RunOrder: 1
            Name: Source
          - Actions:
              - ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: "1"
                Configuration:
                  ProjectName:
                    Ref: BuildProject
                InputArtifacts:
                  - Name: SourceArtifact
                Name: Build
                OutputArtifacts:
                  - Name: BuildOutput
                RunOrder: 1
            Name: Build
          - Actions:
              - ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: S3
                  Version: "1"
                Configuration:
                  BucketName: "{{ service_instance.inputs.bucket_name }}"
                  Extract: "true"
                InputArtifacts:
                  - Name: BuildOutput
                Name: Deploy
                RunOrder: 1
            Name: Deploy
  {%- endfor %}

Outputs:
  PipelineEndpoint:
    Description: The static website pipeline URL
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Pipeline}/view?region=${AWS::Region}"
